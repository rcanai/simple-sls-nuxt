AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  Env:
    Type: String
    Default: "staging"
  SSLArn:
    Type: String
  LambdaArn:
    Type: String
    Default: ""
  Domain:
    Type: String
    Default: "rcanai.jp"
  FullDomain:
    Type: String
    Default: "ssl-nuxt.rcanai.jp"

Conditions:
  # Basic認証の有無
  HasLambda: !Not [!Equals [!Ref LambdaArn, "" ]]

Resources:
  # ------
  # Cloud Front
  # ------
  FrontEndCFDist:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        # Alias(CNAMEs)の設定はSSL証明書の設定が必要
        Aliases:
          - !Ref FullDomain
        ViewerCertificate:
          AcmCertificateArn: !Ref SSL_ARN
          MinimumProtocolVersion: TLSv1_2016 # 現時点でのRecommended
          SslSupportMethod: sni-only
        Origins:
          - Id: ApiGwOriginId
            DomainName:
              Fn::Join:
                - ""
                - - Fn::ImportValue: !Sub "${Env}-slsnuxt-apiId"
                  - ".execute-api.ap-northeast-1.amazonaws.com"
            OriginPath: !Sub "/${Env}"
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: match-viewer
            OriginCustomHeaders:
              - HeaderName: "X-API-KEY"
                HeaderValue: Fn::ImportValue: !Sub "${Env}-slsnuxt-apiKey"
          - Id: StaticS3Bucket
            DomainName:
              Fn::ImportValue: !Sub ${Env}-slsnuxt-s3dn
            OriginPath: ""
            S3OriginConfig:
              OriginAccessIdentity:
                Fn::Join:
                  - ""
                  - - "origin-access-identity/cloudfront/"
                    - Fn::ImportValue: !sub ${Env}-slsnuxt-cfOAI
        Enabled: true
        HttpVersion: http2 # SSL証明書が必要
        Comment:
          Ref: AWS::StackName
        DefaultRootObject: ""
        DefaultCacheBehavior:
          TargetOriginId: ApiGwOriginId
          ViewerProtocolPolicy: redirect-to-https
          LambdaFunctionAssociations:
            !If
              - HasLambda
              - - EventType: viewer-request
                  LambdaFunctionARN: !Ref LambdaArn
              - []
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: all
          Compress: true
          DefaultTTL: 0
          MinTTL: 0
          MaxTTL: 0
        CacheBehaviors:
          - TargetOriginId: StaticS3Bucket
            PathPattern: "/favicon.ico"
            ViewerProtocolPolicy: redirect-to-https
            ForwardedValues:
              QueryString: false
            Compress: true
          - TargetOriginId: StaticS3Bucket
            PathPattern: "/sw.js"
            ViewerProtocolPolicy: redirect-to-https
            ForwardedValues:
              QueryString: false
            Compress: true
          - TargetOriginId: StaticS3Bucket
            PathPattern: "/*.png"
            ViewerProtocolPolicy: redirect-to-https
            ForwardedValues:
              QueryString: false
            Compress: true
          - TargetOriginId: StaticS3Bucket
            PathPattern: "/_nuxt/images/*"
            ViewerProtocolPolicy: redirect-to-https
            ForwardedValues:
              QueryString: false
            Compress: true
        CustomErrorResponses:
          - ErrorCode: 403
            ErrorCachingMinTTL: 0
            ResponseCode: 404
            ResponsePagePath: "/404"

  # ------
  # Route53 RecordSet
  # ------
  Route53RecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Sub "${DOMAIN}."
      Name: !Sub "${FULL_DOMAIN}."
      Type: A
      AliasTarget:
        HostedZoneId: Z2FDTNDATAQYW2 # CloudFrontなのでIDは固定
        DNSName:
          Fn::GetAtt: [FrontEndCFDist, DomainName]